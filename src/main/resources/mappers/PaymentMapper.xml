<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.PaymentMapper">

    <resultMap id="memberCustomerId" type="data.MemberCustomerId">
        <result property="memberEmail" column="member_email"/>
        <result property="customerId" column="customer_id"/>
    </resultMap>

    <resultMap id="orderDto" type="data.order.dto.OrderDto">
        <result property="orderId" column="ordersaveOrder_id"/>
        <result property="customer" column="customer"/>
        <result property="planLogId" column="plan_log_id"/>
    </resultMap>

    <resultMap id="refundVO" type="data.payment.vo.RefundVO">
        <result property="paymentId" column="payment_id"/>
        <result property="impUID" column="imp_uid"/>
        <result property="midUID" column="merchant_uid"/>
        <result property="amount" column="amount"/>
        <result property="isBefore" column="is_before"/>
    </resultMap>

    <select id="getCustomerUID" parameterType="string" resultMap="memberCustomerId">
        select * from members_customer_id where member_email = #{email}
    </select>

    <insert id="registerCustomerUID" parameterType="string">
        INSERT INTO members_customer_id values(#{email},#{customerId})
    </insert>

    <select id="getRealAmount" parameterType="string" resultType="int">
        select datediff(enddate,startdate) as diff from orders natural join plan where order_id = #{orderId};
    </select>

    <insert id="saveOrder" parameterType="orderDto">
        INSERT INTO orders values (null,#{orderInfo},#{memberEmail},#{schoolId},#{classId},#{totalPaymentAmount},now())
    </insert>

    <insert id="savePayment" parameterType="paymentInfo">
        INSERT INTO payment values (null,#{impUID},#{merchantUID},#{customerUID},#{tid},#{amount},now())
    </insert>

    <select id="getPaymentInfo" parameterType="string" resultMap="refundVO">
        SELECT payment_id,imp_uid,merchant_uid,amount,if(date_format(now(),'%Y-%m-%d') <![CDATA[<]]> start_date,true,false) AS is_before
        FROM payment AS p LEFT OUTER JOIN class_members AS m
        ON p.tid = m.tid WHERE imp_uid = #{impUID} AND merchant_uid = #{midUID}
    </select>

    <delete id="deletePayment" parameterType="string">
        DELETE FROM payment WHERE
        imp_uid = #{impUID} and merchant_uid = #{midUID}
    </delete>

    <insert id="insertWebHook" parameterType="PaymentWebHookDTO">
        INSERT INTO payment_web_hook values (null, #{imp_uid},#{merchant_uid},#{status})
    </insert>
</mapper>



